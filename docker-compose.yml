version: '3.9'

services:
  frontend:
    build:
      context: ./everzero-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  # Exposed frontend port
    depends_on:
      - gateway
    environment:
      - API_URL=http://gateway  # URL to reach the gateway
    networks:
      - extranet  # Accessible externally

  gateway:
    build:
      context: ./deployable
      dockerfile: Gateway/Dockerfile
    ports:
      - "1000:80"
      - "1001:443"
    depends_on:
      - auth-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - extranet  # Exposed externally
      - intranet  # Connects to internal services

  auth-service:
    build:
      context: ./deployable
      dockerfile: AuthService/Dockerfile
    ports:
      - "2000:80"
      - "2001:443"
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__SecureNotes=Host=postgres;Database=auth;Username=postgres;Password=root;Port=5432;
      - Jwt__Secret=wOyy&%H&WiJRpmIfjVMwxh75&7iiCbcjYFXt7vxln8z!MelF
      - Jwt__Issuer=https://everzero.co.uk
      - Jwt__Audience=everzero.co.uk
      - Jwt__ExpirationMinutes=1440
    networks:
      - intranet  # Internal-only access

  postgres:
    image: postgres:17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=SecureNotes
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - intranet  # Internal-only access

networks:
  intranet:
    driver: bridge
    internal: true  # Restrict external access
  extranet:
    driver: bridge  # Public-facing network

volumes:
  postgres_data:
    driver: local
